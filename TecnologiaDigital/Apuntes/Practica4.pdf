%PDF-1.2 %‚„œ”
 14 0 obj<</Length 15 0 R>>stream
BT70.92 794.88  TD0 0 0 rg /F0 9  Tf0.0033  Tc 0  Tw (Pr\341cticas) Tj32.52 0  TD 0  Tc 0.03  Tw ( ) Tj180.12 0  TD ( ) Tj231.84 0  TD 0.06  Tc 0  Tw (15) Tj9.12 0  TD 0  Tc 0.03  Tw ( ) TjET69.48 791.16 456.48 0.48 re fBT106.92 776.4  TD/F1 9.96  Tf0.002  Tw ( ) Tj75.96 -102.36  TD /F2 24  Tf-0.009  Tc 0.105  Tw (Pr\341ctica ) Tj98.28 0  TD -0.024  Tc 0  Tw (4) Tj14.16 0  TD 0.072  Tc 0.024  Tw (: ) Tj16.08 0  TD -0.0034  Tc -0.0206  Tw (Clases y ) Tj96.24 0  TD -0.0072  Tc 0  Tw (algoritmos) Tj116.88 0  TD 0  Tc -0.024  Tw ( ) TjET69.48 664.44 456.48 2.16 re fBT70.92 649.68  TD/F3 9.96  Tf0.0031  Tc -0.001  Tw (Ejercicio ) Tj44.76 0  TD 0.0434  Tc 0  Tw (4) Tj6 0  TD -0.0553  Tc (.) Tj3.6 0  TD 0.0434  Tc (1) Tj5.88 0  TD -0.0553  Tc 0.0574  Tw (: ) Tj6.6 0  TD 0.0219  Tc 0  Tw (Funciones) Tj46.68 0  TD 0.0231  Tc 0.0089  Tw ( de clase y ) Tj53.4 0  TD 0.0221  Tc 0  Tw (v) Tj5.52 0  TD 0.0159  Tc 0.0462  Tw (ariables de clase) Tj80.52 0  TD 0  Tc 0.002  Tw ( ) Tj-238.8 -14.64  TD /F1 9.96  Tf0.0077  Tc 0.0443  Tw (En este ejercicio se ve la definici\363n y llamada a una funci\363n ) Tj273 0  TD 0.003  Tc 0.0711  Tw (\(o m\351todo\) de una clase ) Tj111.6 0  TD 0.0441  Tc -0.0421  Tw (en Java.) Tj37.8 0  TD 0  Tc 0.002  Tw ( ) Tj-422.4 -17.52  TD 0.0172  Tc 0.2049  Tw (Se definen tambi\351n variables de clase ) Tj174.48 0  TD 0.0118  Tc 0  Tw (\(va) Tj13.8 0  TD 0.0136  Tc 0.1085  Tw (riables miembro\) ) Tj79.92 0  TD 0.0135  Tc 0.2285  Tw (y variables en las funciones) Tj123.96 0  TD 0.0265  Tc 0.2155  Tw ( \(variables ) Tj-406.32 -11.64  TD 0.0373  Tc 0  Tw (locales\)) Tj34.56 0  TD 0.0202  Tc 0.0364  Tw (. La variable area, a diferencia de lo que dicen las ) Tj230.28 0  TD 0.0281  Tc -0.0261  Tw (gu\355as ) Tj25.68 0  TD 0.0203  Tc 0.0503  Tw (de estilo, tiene el mismo nombre en ) Tj-290.52 -11.64  TD 0.0186  Tc 1.0634  Tw (los tres casos) Tj61.56 0  TD 0.018  Tc 1.0841  Tw (, ya que se quiere observar cuando y c\363mo se utiliza cada una) Tj291.84 0  TD 0.0072  Tc 1.1348  Tw (. La variable de clas) Tj94.68 0  TD 0.0918  Tc 0.0302  Tw (e ) Tj-448.08 -11.64  TD 0.0094  Tc 0.0527  Tw (tambi\351n es static.) Tj81 0  TD 0  Tc 0.002  Tw ( ) Tj-66.84 -17.52  TD ( ) Tj-14.16 -16.44  TD /F4 9  Tf0  Tw (class Ejer1 {) Tj70.2 0  TD ( ) Tj-70.2 -10.2  TD (    static double area;    // variable de la clase) Tj270 0  TD ( ) Tj-270 -10.2  TD ( ) Tj0 -10.2  TD (    public static void main\(String args[]\){) Tj232.2 0  TD ( ) Tj-232.2 -10.2  TD (        ) Tj43.2 0  TD (double radio;    // variable de la funcion main) Tj253.8 0  TD ( ) Tj-297 -10.2  TD (        double area;     // variable de la funcion main) Tj297 0  TD ( ) Tj-297 -10.2  TD (        ) Tj43.2 0  TD ( ) Tj-43.2 -10.2  TD (   ) Tj16.2 0  TD (     if \( args.length < 1\){) Tj145.8 0  TD ( ) Tj-162 -10.2  TD (            System.out.println\("Pasar el radio. ) Tj259.2 0  TD (Ej. : >java Ejer6 12.5"\);) Tj135 0  TD ( ) Tj-394.2 -10.2  TD (            System.exit\(0\);) Tj145.8 0  TD ( ) Tj-145.8 -10.2  TD (        ) Tj43.2 0  TD (}) Tj5.4 0  TD ( ) Tj-48.6 -10.2  TD (        radio = Double.parseDouble\(args[0]\);) Tj237.6 0  TD ( ) Tj-237.6 -10.2  TD (        area = Ejer1.Area\(radio\);) Tj178.2 0  TD ( ) Tj-178.2 -10.2  TD (        System.out.println\("Area del ) Tj199.8 0  TD (circulo r="+radio + "m. = " + area+" m2"\);) Tj226.8 0  TD ( ) Tj-426.6 -10.2  TD (        area = Ejer1.area;) Tj140.4 0  TD ( ) Tj-140.4 -10.2  TD (        System.out.println\("Area del circulo r="+radio+"m. = "+area+" Has."\);) Tj415.8 0  TD ( ) Tj-415.8 -10.2  TD (    }) Tj27 0  TD ( ) Tj-27 -10.08  TD ( ) Tj0 -10.2  TD (    public static double Area \( double rd\) {) Tj237.6 0  TD ( ) Tj-237.6 -10.2  TD (        ) Tj43.2 0  TD (double area; //variable local de la funcion Area) Tj259.2 0  TD ( ) Tj-302.4 -10.2  TD (        //usar la variable local) Tj172.8 0  TD ( ) Tj-172.8 -10.2  TD (        ) Tj43.2 0  TD (area = Math.PI*Math.pow\(rd,2.0\);) Tj172.8 0  TD ( ) Tj-216 -10.2  TD (        ) Tj43.2 0  TD (//acceder a la variable de la clase) Tj189 0  TD ( ) Tj-232.2 -10.2  TD (        Ejer1.area = area/10000; //obtener el area en Has.) Tj313.2 0  TD ( ) Tj-313.2 -10.2  TD (        return area; //devuelve el valor) Tj216 0  TD ( ) Tj-216 -10.2  TD (    }) Tj27 0  TD ( ) Tj-27 -10.2  TD (}) Tj5.4 0  TD ( ) Tj8.76 -11.4  TD /F1 9.96  Tf0.002  Tw ( ) Tj0 -17.64  TD 0.0113  Tc 0.9107  Tw (Observa que la variable) Tj0  Tc 0.002  Tw ( ) Tj112.2 0  TD /F3 9.96  Tf0.0193  Tc 0  Tw (area) Tj21.84 0  TD /F1 9.96  Tf0.0184  Tc 0.8837  Tw (, declarada como) Tj0  Tc 0.002  Tw ( ) Tj83.52 0  TD /F2 9.96  Tf0.0246  Tc 0  Tw (double) Tj31.92 0  TD /F1 9.96  Tf0.022  Tc 0.8801  Tw (, ha sido definida tanto en la clase como) Tj0  Tc 0.122  Tw ( ) Tj-263.64 -11.64  TD 0.0158  Tc 2.5062  Tw (dentro de los m\351todos) Tj0  Tc 0.002  Tw ( ) Tj113.16 0  TD /F3 9.96  Tf0.0436  Tc 0  Tw (main\(\)) Tj30.48 0  TD /F1 9.96  Tf0.0097  Tc 2.5123  Tw ( y) Tj0  Tc 0.002  Tw ( ) Tj15.96 0  TD /F3 9.96  Tf0.0396  Tc 0  Tw (Area\(\)) Tj29.4 0  TD /F1 9.96  Tf0.0137  Tc 2.5684  Tw (. La variable) Tj0  Tc 0.002  Tw ( ) Tj66.72 0  TD /F3 9.96  Tf0.0193  Tc 0  Tw (area) Tj21.84 0  TD /F5 9.96  Tf0  Tc -0.0089  Tw ( ) Tj5.4 0  TD /F1 9.96  Tf0.0143  Tc 2.5478  Tw (de la clase puede ser accedida por) Tj0  Tc 0.122  Tw ( ) Tj-282.96 -11.52  TD 0.011  Tc 0.3369  Tw (cualquier m\351todo \(o funci\363n\) de la clase, no as\355 las variables declaradas dentro de cada m\351todo, ya ) Tj0 -11.64  TD 0.0208  Tc -0.0188  Tw (que \351stas son locales.) Tj97.68 0  TD 0  Tc 0.002  Tw ( ) Tj-83.52 -17.64  TD 0.0185  Tc 2.7436  Tw (El m\351otodo est\341tico) Tj0  Tc 0.002  Tw ( ) Tj100.8 0  TD /F3 9.96  Tf-0.0026  Tc 0  Tw (pow\(\)) Tj26.64 0  TD /F1 9.96  Tf0.0064  Tc 2.8357  Tw ( de la clase) Tj0  Tc 0.002  Tw ( ) Tj65.04 0  TD /F3 9.96  Tf-0.0137  Tc 0  Tw (Math) Tj23.76 0  TD /F1 9.96  Tf0.0288  Tc 2.7332  Tw ( eleva el primer argumento a la potencia del) Tj0  Tc 0.002  Tw ( ) Tj-230.4 -11.64  TD 0.0238  Tc 0  Tw (segundo.) Tj39.96 0  TD 0  Tc 0.002  Tw ( ) Tj-25.8 -17.52  TD 0.0037  Tc -0.0016  Tw (Introducir ) Tj49.68 0  TD -0  Tc 2.5225  Tw (la funci\363n) Tj0  Tc 0.002  Tw ( ) Tj52.32 0  TD /F3 9.96  Tf0.0017  Tc 2.6403  Tw (Perimetro \(\)) Tj60.24 0  TD /F1 9.96  Tf0.04  Tc 2.4821  Tw ( para ) Tj2.4918  Tc 0  Tw (e) Tj36.48 0  TD -0  Tc 2.5225  Tw (l c\341lculo del ) Tj2.4923  Tc 0  Tw (p) Tj70.8 0  TD 0.0138  Tc 2.5323  Tw (er\355metro en metros y kil\363metros, e) Tj0  Tc 0.122  Tw ( ) Tj-283.68 -11.64  TD 0.021  Tc -0.0189  Tw (imprimir ambos valores.) Tj108.48 0  TD 0  Tc 0.002  Tw ( ) TjETendstreamendobj15 0 obj6780endobj4 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font 20 0 R/ProcSet 2 0 R>>/Contents 14 0 R>>endobj20 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F3 12 0 R/F4 16 0 R/F5 18 0 R>>endobj24 0 obj<</Length 25 0 R>>stream
BT70.92 794.88  TD0 0 0 rg /F0 9  Tf0.06  Tc 0  Tw (16) Tj9 0  TD 0  Tc 0.03  Tw ( ) Tj203.64 0  TD ( ) Tj190.8 0  TD -0.0076  Tc 0.0376  Tw (Inform\341tica II) Tj50.16 0  TD 0  Tc 0.03  Tw ( ) TjET69.48 791.16 456.48 0.48 re fBT70.92 776.4  TD/F3 9.96  Tf0.0031  Tc -0.001  Tw (Ejercicio ) Tj44.76 0  TD 0.0434  Tc 0  Tw (4) Tj6 0  TD 0.0176  Tc (.2:) Tj13.08 0  TD 0  Tc 0.002  Tw ( ) Tj3 0  TD 0.0104  Tc 0  Tw (Algori) Tj28.2 0  TD 0.0087  Tc -0.0066  Tw (tmo de ordenaci\363n) Tj88.44 0  TD 0  Tc 0.002  Tw ( ) Tj-169.32 -14.64  TD /F1 9.96  Tf( ) Tj0 -17.52  TD 0.0175  Tc 0.9596  Tw (El siguiente ejercicio llama a una funci\363n que realiza la ordenaci\363n de los n\372meros que se dan) Tj0  Tc 0.122  Tw ( ) Tj-14.16 -11.64  TD 0.0187  Tc 0.0033  Tw (como argumentos. La utilizaci\363n del programa es:) Tj224.52 0  TD 0  Tc 0.002  Tw ( ) Tj-193.32 -17.16  TD /F6 9.96  Tf0.024  Tc 0  Tw (java Ejer2 5 7 2 45 12 5 ) Tj150 0  TD (-) Tj6 0  TD (4) Tj6 0  TD 0  Tc 0.024  Tw ( ) Tj-179.04 -17.76  TD /F1 9.96  Tf0.0168  Tc 0.0252  Tw (El c\363digo del programa es el siguiente:) Tj174.12 0  TD 0  Tc 0.002  Tw ( ) Tj-174.12 -17.64  TD ( ) Tj-14.16 -16.44  TD /F4 9  Tf0  Tw (class Ejer2 {) Tj70.2 0  TD ( ) Tj-70.2 -10.2  TD (    // var) Tj54 0  TD (iables miembro de la clase Ejer2) Tj172.8 0  TD ( ) Tj-226.8 -10.2  TD (    static int Numero;) Tj118.8 0  TD ( ) Tj-118.8 -10.2  TD (    static int[] Datos; //array para almacenar los numeros) Tj313.2 0  TD ( ) Tj-313.2 -10.2  TD (    ) Tj21.6 0  TD ( ) Tj-21.6 -10.2  TD (    ) Tj21.6 0  TD (public static void main\(String [] args\) {) Tj221.4 0  TD ( ) Tj-243 -10.08  TD (        Ejer2.Numero = args.length;) Tj189 0  TD ( ) Tj-189 -10.2  TD (        Ejer2.Datos = new int[Ejer2.Numero];) Tj237.6 0  TD ( ) Tj-237.6 -10.2  TD ( ) Tj0 -10.2  TD (        ) Tj43.2 0  TD (for \(int i=0;i< Ejer2.Numero;i++ \) {) Tj194.4 0  TD ( ) Tj-237.6 -10.2  TD (            ) Tj64.8 0  TD (Ejer2.Datos[i] = Integer.parseInt\(args[i]\);) Tj232.2 0  TD ( ) Tj-297 -10.2  TD (        }) Tj48.6 0  TD ( ) Tj-48.6 -10.2  TD ( ) Tj0 -10.2  TD (        //Ahora los ordenaremos de menor a mayor) Tj259.2 0  TD ( ) Tj-259.2 -10.2  TD (        Ejer2.Ordena\(\); //llamamos a la funcion ordena) Tj291.6 0  TD ( ) Tj-291.6 -10.2  TD (    }) Tj27 0  TD ( ) Tj-27 -10.2  TD ( ) Tj0 -10.2  TD (    public static void Ordena\(\) {) Tj178.2 0  TD ( ) Tj-178.2 -10.2  TD (       ) Tj37.8 0  TD ( System.out.println\(") Tj113.4 0  TD (\\) Tj5.4 0  TD (nLos numeros sin ordenar son: "\);) Tj178.2 0  TD ( ) Tj-334.8 -10.2  TD (        ) Tj43.2 0  TD (for \(int i=0;i<Numero;i++\)) Tj140.4 0  TD ( ) Tj-183.6 -10.2  TD (            ) Tj64.8 0  TD (System.out.println\("Num: "+i+" valor: "+Datos[i]\);) Tj270 0  TD ( ) Tj-334.8 -10.2  TD (        ) Tj43.2 0  TD (//usaremos un sistema de ordenamiento sencillo) Tj248.4 0  TD ( ) Tj-291.6 -10.2  TD (        ) Tj43.2 0  TD (for \(int i=0;i < Numero) Tj124.2 0  TD (-) Tj5.4 0  TD (1;i++\) {) Tj43.2 0  TD ( ) Tj-216 -10.2  TD (      ) Tj32.4 0  TD (      for \(int j=i+1;j<Numero;j++\) {) Tj194.4 0  TD ( ) Tj-226.8 -10.2  TD (                ) Tj86.4 0  TD (if \( Datos[i] > Datos[j]\) { // hay que permutar los valores) Tj318.6 0  TD ( ) Tj-405 -10.2  TD (                    int tmp = Datos[j];) Tj210.6 0  TD ( ) Tj-210.6 -10.2  TD (                    Ejer2.Datos[j] = Datos[i];) Tj248.4 0  TD ( ) Tj-248.4 -10.2  TD (                    Ejer2.Datos[i] = tmp;) Tj221.4 0  TD ( ) Tj-221.4 -10.2  TD (              ) Tj75.6 0  TD (  }) Tj16.2 0  TD ( ) Tj-91.8 -10.2  TD (            }) Tj70.2 0  TD ( ) Tj-70.2 -10.2  TD (        }) Tj48.6 0  TD ( ) Tj-48.6 -10.08  TD (        System.out.println\(") Tj151.2 0  TD (\\) Tj5.4 0  TD (nLos numeros ordenados de menor a mayor son: "\);) Tj259.2 0  TD ( ) Tj-415.8 -10.2  TD (        ) Tj43.2 0  TD (for \(int i=0;i<Numero;i++\)) Tj140.4 0  TD ( ) Tj-183.6 -10.2  TD (            ) Tj64.8 0  TD (System.out.println\("Num: "+i+" valor: "+Datos[i]\);) Tj270 0  TD ( ) Tj-334.8 -10.2  TD (    ) Tj21.6 0  TD (}) Tj5.4 0  TD ( ) Tj-27 -10.2  TD (}) Tj5.4 0  TD ( ) Tj8.76 -11.4  TD /F1 9.96  Tf0.002  Tw ( ) Tj0 -17.64  TD 0.0048  Tc 0.2544  Tw (Cambiar el programa para que los n\372meros en) Tj207.96 0  TD 0.0129  Tc 0.2291  Tw ( lugar de recibirlos como argumentos los genere de ) Tj-222.12 -11.64  TD 0.0184  Tc 1.4237  Tw (forma aleatoria) Tj71.16 0  TD 0.0225  Tc 1.4195  Tw ( con valores entre 0 y 100) Tj124.44 0  TD 0.0224  Tc 1.4197  Tw (. La cantidad de n\372meros a generar se introduce como) Tj0  Tc 0.122  Tw ( ) Tj-195.6 -11.64  TD 0.0159  Tc 0.0462  Tw (argumento del programa.) Tj114.24 0  TD 0.0236  Tc 0.0024  Tw ( De esta forma el comando:) Tj124.32 0  TD 0  Tc 0.002  Tw ( ) Tj-207.36 -17.04  TD /F6 9.96  Tf0.024  Tc 0  Tw (java Ejer2 10) Tj78 0  TD 0  Tc 0.024  Tw ( ) Tj-95.04 -17.88  TD /F1 9.96  Tf-0.013  Tc 0  Tw (G) Tj6.72 0  TD 0.0289  Tc -0.0269  Tw (enera 10 n\372meros aleatorios y los ordena.) Tj188.4 0  TD 0  Tc 0.002  Tw ( ) TjETendstreamendobj25 0 obj5132endobj21 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F3 12 0 R /F4 16 0 R /F6 22 0 R >>/ProcSet 2 0 R>>/Contents 24 0 R>>endobj27 0 obj<</Length 28 0 R>>stream
BT70.92 794.88  TD0 0 0 rg /F0 9  Tf0.0033  Tc 0  Tw (Pr\341cticas) Tj32.52 0  TD 0  Tc 0.03  Tw ( ) Tj180.12 0  TD ( ) Tj231.84 0  TD 0.06  Tc 0  Tw (17) Tj9.12 0  TD 0  Tc 0.03  Tw ( ) TjET69.48 791.16 456.48 0.48 re fBT70.92 776.4  TD/F3 9.96  Tf0.002  Tw ( ) Tj3 0  TD ( ) Tj-3 -17.64  TD -0.0263  Tc 0  Tw (E) Tj5.88 0  TD 0.0067  Tc -0.0047  Tw (jercicio ) Tj38.88 0  TD 0.0434  Tc 0  Tw (4) Tj6 0  TD -0.0553  Tc (.) Tj3.6 0  TD 0.0434  Tc (3) Tj5.88 0  TD 0.0155  Tc 0.0265  Tw (: Utilizaci\363n de clases.) Tj108 0  TD 0  Tc 0.002  Tw ( ) Tj-154.08 -14.52  TD /F1 9.96  Tf0.0236  Tc 2.0369  Tw (En Java no existe como tipo predefinido el n\372mero complejo. Para realizar operaciones con) Tj0  Tc 0.122  Tw ( ) Tj-14.16 -11.64  TD 0.0163  Tc 0.0338  Tw (complejos se utiliza en este ejercicio una clase que define los n\372meros complejos y sus operaciones.) Tj453.36 0  TD 0  Tc 0.002  Tw ( ) Tj-439.2 -17.64  TD 0.0145  Tc 0.0116  Tw (La clase se puede descargar ) Tj128.28 0  TD 0.0429  Tc 0  Tw (de:) Tj14.64 0  TD 0  Tc 0.002  Tw ( ) Tj-142.92 -17.64  TD 0 0 1 rg 0.0192  Tc 0  Tw (http://www.cs.princeton.edu/introcs/32class/Complex.java) TjET85.08 695.4 274.2 0.6 re fBT359.28 697.32  TD0 0 0 rg 0  Tc 0.002  Tw ( ) Tj-274.2 -17.52  TD 0.034  Tc -0.032  Tw (Se pide realizar) Tj69.96 0  TD -0.0553  Tc 0  Tw (:) Tj3.6 0  TD 0  Tc 0.002  Tw ( ) Tj-73.56 -17.64  TD 0.0628  Tc 0  Tw (1.) Tj8.88 0  TD 0  Tc 0.002  Tw ( ) Tj4.32 0  TD 0.0259  Tc 0  Tw (U) Tj6.48 0  TD 0.0096  Tc 1.3365  Tw (n programa que cree instancias de) Tj0  Tc 0.002  Tw ( ) Tj165.12 0  TD 0.0233  Tc -0.0213  Tw (dos ) Tj19.32 0  TD 0.0197  Tc 1.3024  Tw (n\372meros complejos) Tj87.96 0  TD 0.0127  Tc 1.3093  Tw ( \(por ejemplo 3 + 2i y 5) Tj0  Tc -0.118  Tw ( ) Tj118.44 0  TD -0.0553  Tc 0  Tw (-) Tj3.6 0  TD 0.0557  Tc 1.2664  Tw ( 8i\)) Tj16.08 0  TD 0.0097  Tc 1.3123  Tw ( y) Tj0  Tc 0.002  Tw ( ) Tj-444.36 -11.64  TD 0.0076  Tc -0.0056  Tw (realice ) Tj36.12 0  TD 0.004  Tc -0.002  Tw (su ) Tj14.88 0  TD 0.0058  Tc 2.3963  Tw (suma, su multiplicaci\363n, el) Tj127.92 0  TD 0.0027  Tc 2.3993  Tw ( conjugado) Tj51.48 0  TD 0.0072  Tc 2.3949  Tw ( de uno de ellos y el producto de uno por su) Tj0  Tc 0.122  Tw ( ) Tj-230.4 -11.64  TD 0.0027  Tc 0  Tw (conjugado) Tj46.08 0  TD -0.0553  Tc (.) Tj3.6 0  TD 0.0166  Tc 4.2197  Tw ( Se puede utilizar como modelo la funci\363n main\(\) que est\341 en la propia clase) Tj0  Tc 0.122  Tw ( ) Tj-49.68 -11.52  TD 0.02  Tc 0  Tw (Complex.java.) Tj64.92 0  TD 0  Tc 0.002  Tw ( ) Tj-50.76 -17.64  TD 0.0165  Tc -0.0145  Tw (2. C) Tj17.88 0  TD 0.0181  Tc 0.0289  Tw (rear un array de 10 posiciones de n\372meros complejos) Tj239.04 0  TD -0.0553  Tc 0  Tw (.) Tj3.6 0  TD 0  Tc 0.002  Tw ( ) Tj-260.52 -17.64  TD -0.059  Tc 0  Tw (3) Tj5.28 0  TD -0.0553  Tc 0.0574  Tw (. ) Tj9.6 0  TD 0.0101  Tc 2.9919  Tw (A continuaci\363) Tj63.72 0  TD 0.0204  Tc 2.9817  Tw (n, realizar ) Tj2.9618  Tc 0  Tw (u) Tj60.84 0  TD 0.0161  Tc 2.9993  Tw (n bucle que rellene las 10 posiciones con n\372meros complejos) Tj0  Tc 0.122  Tw ( ) Tj-153.6 -11.64  TD 0.0201  Tc -0.006  Tw (aleatorios, con la parte real e imaginaria entre 0 y 1) Tj235.92 0  TD -0.059  Tc 0  Tw (0) Tj5.28 0  TD -0.0553  Tc (.) Tj3.6 0  TD 0  Tc 0.002  Tw ( ) Tj-230.64 -17.52  TD -0.059  Tc 0  Tw (4) Tj5.28 0  TD 0.0105  Tc 1.2075  Tw (. Un bucle que multiplique cada n\372mero por su conjugado. Se puede comprobar que la parte) Tj0  Tc 0.122  Tw ( ) Tj-19.44 -11.64  TD 0.0222  Tc -0.0201  Tw (imaginaria es nula.) Tj85.2 0  TD 0  Tc 0.002  Tw ( ) Tj-71.04 -17.64  TD ( ) Tj-14.16 -17.64  TD /F3 9.96  Tf0.0095  Tc -0.0075  Tw (Ejercicio 4.4: ) Tj66.84 0  TD 0.0288  Tc -0.0067  Tw (Creaci\363n de un m\351todo de una clase.) Tj174.24 0  TD 0  Tc 0.002  Tw ( ) Tj-226.92 -14.52  TD /F1 9.96  Tf0.0139  Tc 0.6362  Tw (En la clase anterior Complex.java, crear) Tj0  Tc 0.002  Tw ( ) Tj187.92 0  TD 0.0768  Tc 0  Tw (el) Tj8.4 0  TD 0.0271  Tc 0.5749  Tw ( m\351todo est\341tico) Tj77.28 0  TD 0  Tc 0.002  Tw ( ) Tj3.6 0  TD /F3 9.96  Tf0.0234  Tc 0  Tw (Ordena\(Complex[]\)) Tj92.04 0  TD /F1 9.96  Tf0.3185  Tc 0.4036  Tw (, q) Tj12.84 0  TD 0.037  Tc 0.405  Tw (ue recibe un ) Tj-396.24 -11.64  TD 0.0152  Tc 3.184  Tw (vector de n\372meros complejos y los ordena. Utilizar dicha funci\363n con el vector de n\372meros) Tj0  Tc 0.122  Tw ( ) Tj0 -11.64  TD 0.0034  Tc 1.9358  Tw (complejos creados en el paso 3 del ej) Tj182.16 0  TD 0.0114  Tc 1.9256  Tw (ercicio anterior. La funci\363n no tiene que devolver ning\372n) Tj0  Tc 0.122  Tw ( ) Tj-182.16 -11.64  TD 0.0231  Tc -0.0211  Tw (valor, por lo que se definir\341 como ) Tj155.28 0  TD /F3 9.96  Tf0.0253  Tc 0  Tw (void.) Tj24 0  TD /F1 9.96  Tf0  Tc 0.002  Tw ( ) Tj-165.12 -17.52  TD 0.0226  Tc 0.2194  Tw (La ordenaci\363n se realiza en base al m\363dulo del n\372mero que se obtiene con la funci\363n ) Tj389.76 0  TD /F3 9.96  Tf0.013  Tc 0  Tw (abs\(\)) Tj23.88 0  TD /F1 9.96  Tf0.0442  Tc 0.1578  Tw ( de la ) Tj-427.8 -11.64  TD 0  Tc 0.0019  Tw (clase ) Tj25.56 0  TD /F3 9.96  Tf0.0346  Tc 0  Tw (Complex) Tj40.68 0  TD /F1 9.96  Tf-0.0553  Tc (.) Tj3.6 0  TD 0  Tc 0.002  Tw ( ) Tj-55.68 -17.64  TD ( ) Tj-14.16 -17.64  TD /F3 9.96  Tf0.0031  Tc -0.001  Tw (Ejercicio ) Tj44.76 0  TD 0.0434  Tc 0  Tw (4) Tj6 0  TD -0.0553  Tc (.) Tj3.6 0  TD 0.0434  Tc (5) Tj5.88 0  TD 0.0115  Tc 0.0145  Tw (: Utilizaci\363n y definici\363n de cl) Tj142.56 0  TD 0.0074  Tc 0  Tw (ases.) Tj24.24 0  TD 0  Tc 0.002  Tw ( ) Tj-212.88 -14.64  TD /F1 9.96  Tf0.0121  Tc 3.4918  Tw (En este ejercicio se pide realizar lo mismo que en el ejercicio) Tj0  Tc 0.002  Tw ( ) Tj322.44 0  TD -0.059  Tc 0  Tw (4) Tj5.28 0  TD -0.0553  Tc (.) Tj3.6 0  TD -0.059  Tc (3) Tj5.28 0  TD 0.0285  Tc 3.4535  Tw ( pero utilizando otra) Tj0  Tc 0.122  Tw ( ) Tj-350.76 -11.52  TD 0.0074  Tc 2.7847  Tw (implementaci\363n de la clase Complex) Tj175.56 0  TD 0.0109  Tc 2.7512  Tw ( basada en coordenadas polares) Tj153.48 0  TD 0.0175  Tc 2.7685  Tw (. Se puede obtener en la) Tj0  Tc 0.122  Tw ( ) Tj-329.04 -11.64  TD 0.005  Tc 0  Tw (direcci\363n:) Tj44.88 0  TD 0  Tc 0.002  Tw ( ) Tj-30.72 -17.64  TD 0 0 1 rg 0.0203  Tc 0  Tw (http://www.cs.princeton.edu/introcs/33design/Complex.java) TjET85.08 344.76 281.4 0.6 re fBT366.48 346.68  TD0 0 0 rg 0  Tc 0.002  Tw ( ) Tj-281.4 -17.64  TD 0.0197  Tc -0  Tw (Ser\341 necesario guardarla en un directorio distinto que la anterior por tener el mismo nombre.) Tj421.68 0  TD 0  Tc 0.002  Tw ( ) Tj-421.68 -17.52  TD 0.0201  Tc 0.8476  Tw (El primer paso es comprobar las operaciones ya definidas, suma y multiplicaci\363n, con el mi) Tj421.56 0  TD 0.077  Tc 0.0451  Tw (smo ) Tj-435.72 -11.64  TD 0.009  Tc 0.233  Tw (c\363digo anterior pero utilizando esta clase, para ello el c\363digo que utiliza esta clase debe estar en el ) Tj0 -11.64  TD 0.0185  Tc -0.0165  Tw (mismo directorio.) Tj79.56 0  TD 0  Tc 0.002  Tw ( ) Tj-65.4 -17.64  TD 0.0133  Tc 1.4688  Tw (Se debe completar la definici\363n de la clase con la funci\363n conjugado. Nota: el conjugado del) Tj0  Tc 0.002  Tw ( ) Tj-14.16 -12.36  TD 0.0029  Tc 0.0592  Tw (complejo \(r, ) Tj58.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (\341ngulo) Tj36 0  TD /F1 9.96  Tf0.0296  Tc -0.0276  Tw (\) es \(r, ) Tj33.48 0  TD -0.0553  Tc 0  Tw (-) Tj3.6 0  TD /F4 9.96  Tf0.024  Tc (\341ngulo) Tj36.12 0  TD /F1 9.96  Tf0.0647  Tc (\).) Tj7.32 0  TD 0  Tc 0.002  Tw ( ) Tj-161.16 -17.64  TD 0.0233  Tc -0.0142  Tw (Crear el array de 10 posiciones y los dos bucles que lo rellenan y multiplican por el conjugado.) Tj425.64 0  TD 0  Tc 0.002  Tw ( ) Tj-403.8 -16.32  TD /F4 9  Tf0  Tw ( ) TjETendstreamendobj28 0 obj7808endobj26 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F3 12 0 R /F4 16 0 R >>/ProcSet 2 0 R>>/Contents 27 0 R>>endobj6 0 obj<</Type /Font/Subtype /TrueType/Name /F0/BaseFont /TimesNewRoman/FirstChar 32/LastChar 255/Widths [ 250 333 408 500 500 833 778 180 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 778 500 778 333 500 444 1000 500 500 333 1000 556 333 889 778 611 778 778 333 333 444 444 350 500 1000 333 980 389 333 722 778 444 722 250 333 500 500 500 500 200 500 333 760 276 500 564 333 760 500 400 549 300 300 333 576 453 250 333 300 310 500 750 750 750 444 722 722 722 722 722 722 889 667 611 611 611 611 333 333 333 333 722 722 722 722 722 722 722 564 722 722 722 722 722 722 556 500 444 444 444 444 444 444 667 444 444 444 444 444 278 278 278 278 500 500 500 500 500 500 500 549 500 500 500 500 500 500 500 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 7 0 R>>endobj7 0 obj<</Type /FontDescriptor/FontName /TimesNewRoman/Flags 34/FontBBox [ -250 -216 1163 1000 ]/MissingWidth 323/StemV 73/StemH 73/ItalicAngle 0/CapHeight 891/XHeight 446/Ascent 891/Descent -216/Leading 149/MaxWidth 969/AvgWidth 401>>endobj8 0 obj<</Type /Font/Subtype /TrueType/Name /F1/BaseFont /TrebuchetMS/FirstChar 32/LastChar 255/Widths [ 301 367 325 524 524 600 706 160 367 367 367 524 367 367 367 524 524 524 524 524 524 524 524 524 524 524 367 367 524 524 524 367 771 590 566 598 613 536 525 676 654 278 477 576 506 709 638 674 558 676 582 481 581 648 587 852 557 570 550 367 355 367 524 524 524 525 557 495 557 545 370 502 546 285 367 504 295 830 546 537 557 557 389 405 396 546 490 744 501 493 475 367 524 367 524 500 524 500 367 388 524 734 459 459 524 913 481 367 993 500 550 500 500 367 367 524 524 524 367 734 524 635 405 367 924 500 475 570 301 367 524 524 524 570 524 454 524 713 367 524 524 367 713 524 524 524 451 454 524 546 524 367 524 451 367 524 814 814 814 367 590 590 590 590 590 590 867 598 536 536 536 536 278 278 278 278 613 638 674 674 674 674 674 524 657 648 648 648 648 570 556 546 525 525 525 525 525 525 873 495 545 545 545 545 285 285 285 285 549 546 537 537 537 537 537 524 545 546 546 546 546 493 553 493 ]/Encoding /WinAnsiEncoding/FontDescriptor 9 0 R>>endobj9 0 obj<</Type /FontDescriptor/FontName /TrebuchetMS/Flags 32/FontBBox [ -250 -222 1087 1000 ]/MissingWidth 335/StemV 83/StemH 83/ItalicAngle 0/CapHeight 939/XHeight 470/Ascent 939/Descent -222/Leading 161/MaxWidth 906/AvgWidth 454>>endobj10 0 obj<</Type /Font/Subtype /TrueType/Name /F2/BaseFont /TrebuchetMS,Bold/FirstChar 32/LastChar 255/Widths [ 301 367 367 586 586 684 706 229 367 367 432 586 367 367 367 390 586 586 586 586 586 586 586 586 586 586 367 367 586 586 586 438 771 633 595 612 643 569 583 671 684 278 533 617 553 745 667 703 587 709 611 511 612 678 622 884 601 613 560 402 355 402 586 586 586 533 582 512 581 575 370 502 593 298 367 548 295 859 590 566 583 584 427 431 396 591 527 784 552 534 528 434 586 434 586 500 586 500 367 388 524 734 459 459 586 1036 511 367 1003 500 560 500 500 367 367 586 586 524 367 734 586 644 431 367 921 500 528 613 301 367 586 524 586 570 586 454 586 713 429 586 586 367 713 586 586 586 451 454 586 547 524 367 586 451 429 586 814 814 814 438 633 633 633 633 633 633 935 612 569 569 569 569 278 278 278 278 643 667 703 703 703 703 703 586 684 678 678 678 678 613 558 546 533 533 533 533 533 533 863 512 575 575 575 575 298 298 298 298 566 590 566 566 566 566 566 586 566 591 591 591 591 534 583 534 ]/Encoding /WinAnsiEncoding/FontDescriptor 11 0 R>>endobj11 0 obj<</Type /FontDescriptor/FontName /TrebuchetMS,Bold/Flags 16416/FontBBox [ -250 -222 1243 1000 ]/MissingWidth 402/StemV 151/StemH 151/ItalicAngle 0/CapHeight 939/XHeight 470/Ascent 939/Descent -222/Leading 161/MaxWidth 1036/AvgWidth 474>>endobj12 0 obj<</Type /Font/Subtype /TrueType/Name /F3/BaseFont /TrebuchetMS,BoldItalic/FirstChar 32/LastChar 255/Widths [ 301 367 391 586 586 732 706 301 367 367 432 586 367 367 367 397 586 586 586 586 586 586 586 586 586 586 367 367 586 586 586 397 771 614 590 613 632 593 585 676 678 278 499 650 528 786 660 702 583 770 624 501 685 662 683 926 657 684 611 485 478 485 586 586 586 593 593 493 593 552 410 535 562 327 388 540 320 830 562 570 599 599 447 459 438 557 552 773 576 564 533 485 586 485 586 500 586 500 367 586 586 734 459 459 586 1042 501 367 1058 500 611 500 500 367 367 586 586 524 367 734 586 644 459 367 928 500 533 684 301 367 586 586 586 586 586 586 586 713 428 524 586 367 713 586 586 586 465 463 586 557 586 367 586 479 434 524 877 877 877 367 614 614 614 614 614 614 959 613 593 593 593 593 278 278 278 278 654 660 702 702 702 702 702 586 702 662 662 662 662 684 562 577 593 593 593 593 593 593 894 493 552 552 552 552 327 327 327 327 570 562 570 570 570 570 570 586 570 557 557 557 557 564 599 564 ]/Encoding /WinAnsiEncoding/FontDescriptor 13 0 R>>endobj13 0 obj<</Type /FontDescriptor/FontName /TrebuchetMS,BoldItalic/Flags 16480/FontBBox [ -250 -222 1156 1000 ]/MissingWidth 442/StemV 153/StemH 153/ItalicAngle -11/CapHeight 939/XHeight 470/Ascent 939/Descent -222/Leading 161/MaxWidth 963/AvgWidth 481>>endobj16 0 obj<</Type /Font/Subtype /TrueType/Name /F4/BaseFont /CourierNew/FirstChar 32/LastChar 255/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 ]/Encoding /WinAnsiEncoding/FontDescriptor 17 0 R>>endobj17 0 obj<</Type /FontDescriptor/FontName /CourierNew/Flags 34/FontBBox [ -250 -300 764 1000 ]/MissingWidth 637/StemV 109/StemH 109/ItalicAngle 0/CapHeight 833/XHeight 417/Ascent 833/Descent -300/Leading 133/MaxWidth 637/AvgWidth 600>>endobj18 0 obj<</Type /Font/Subtype /TrueType/Name /F5/BaseFont /Arial/FirstChar 32/LastChar 255/Widths [ 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 19 0 R>>endobj19 0 obj<</Type /FontDescriptor/FontName /Arial/Flags 32/FontBBox [ -250 -212 1190 1000 ]/MissingWidth 272/StemV 80/StemH 80/ItalicAngle 0/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 992/AvgWidth 441>>endobj22 0 obj<</Type /Font/Subtype /TrueType/Name /F6/BaseFont /CourierNew,Bold/FirstChar 32/LastChar 255/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 ]/Encoding /WinAnsiEncoding/FontDescriptor 23 0 R>>endobj23 0 obj<</Type /FontDescriptor/FontName /CourierNew,Bold/Flags 16418/FontBBox [ -250 -300 710 1000 ]/MissingWidth 592/StemV 191/StemH 191/ItalicAngle 0/CapHeight 833/XHeight 417/Ascent 833/Descent -300/Leading 133/MaxWidth 592/AvgWidth 600>>endobj2 0 obj[ /PDF /Text  ]endobj5 0 obj<</Kids [4 0 R 21 0 R 26 0 R ]/Count 3/Type /Pages/MediaBox [ 0 0 595 842 ]>>endobj1 0 obj<</Creator <FEFF005000720061006300740069006300610073002D0049006E0066006F0072006D0061007400690063006100490049002D0032003000310030002E0064006F00630020002D0020004D006900630072006F0073006F0066007400200057006F00720064>/CreationDate (D:20100202120638)/Title <FEFF005000720061006300740069006300610073002D0049006E0066006F0072006D0061007400690063006100490049002D0032003000310030002E0064006F0063>/Author <FEFF006E00730065007200720061006E006F>/Producer (Acrobat PDFWriter 5.0 for Windows NT)>>endobj3 0 obj<</Pages 5 0 R/Type /Catalog>>endobjxref0 290000000000 65535 f 0000030084 00000 n 0000029955 00000 n 0000030588 00000 n 0000006875 00000 n 0000029986 00000 n 0000020484 00000 n 0000021573 00000 n 0000021833 00000 n 0000022917 00000 n 0000023175 00000 n 0000024268 00000 n 0000024538 00000 n 0000025637 00000 n 0000000019 00000 n 0000006854 00000 n 0000025914 00000 n 0000026999 00000 n 0000027258 00000 n 0000028345 00000 n 0000006984 00000 n 0000012278 00000 n 0000028598 00000 n 0000029688 00000 n 0000007070 00000 n 0000012257 00000 n 0000020329 00000 n 0000012445 00000 n 0000020308 00000 n trailer<</Size 29/Root 3 0 R/Info 1 0 R/ID [<5ef8618715d00fe36fc8d2478d5abcbf><5ef8618715d00fe36fc8d2478d5abcbf>]>>startxref30637%%EOF